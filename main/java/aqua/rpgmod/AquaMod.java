package aqua.rpgmod;

import java.io.File;

import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.Configuration;
import aqua.rpgmod.adapter.Adapter;
import aqua.rpgmod.adapter.AdapterSideMod;
import aqua.rpgmod.block.AQBlocks;
import aqua.rpgmod.client.gui.AQGuiHandler;
import aqua.rpgmod.command.AQCommandManager;
import aqua.rpgmod.command.AQCommandRegion;
import aqua.rpgmod.craft.AQAnvilCraft;
import aqua.rpgmod.craft.AQPlayerCraft;
import aqua.rpgmod.craft.AQWorkbenchCraft;
import aqua.rpgmod.entity.AQEntitySpellCharge;
import aqua.rpgmod.item.AQItems;
import aqua.rpgmod.service.handlers.AQBowEventHandler;
import aqua.rpgmod.service.proxy.AQCommonProxy;
import aqua.rpgmod.world.gen.AQTerrainGenHandler;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.event.FMLServerStartingEvent;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.network.simpleimpl.SimpleNetworkWrapper;
import cpw.mods.fml.common.registry.EntityRegistry;

@Mod(modid = AQModInfo.MODID, name = AQModInfo.NAME, version = AQModInfo.VERSION)
public class AquaMod
{
	@SidedProxy(clientSide = "aqua.rpgmod.service.proxy.AQClientProxy", serverSide = "aqua.rpgmod.service.proxy.AQCommonProxy")
	public static AQCommonProxy proxy;
	
	@Instance(AQModInfo.MODID)
	public static AquaMod mod;
	
	public static Configuration config;
	public static File baseDir;
	public static SimpleNetworkWrapper playerNetwork;
	public static SimpleNetworkWrapper serviceNetwork;
	public static SimpleNetworkWrapper regionNetwork;
	
	@SuppressWarnings("static-method")
	@EventHandler
	public void preInit(FMLPreInitializationEvent event)
	{
		ModMetadata meta = event.getModMetadata();
		
		meta.autogenerated = false;
		
		meta.modId = AQModInfo.MODID;
		meta.name = AQModInfo.NAME;
		meta.description = AQModInfo.DESC;
		meta.authorList = AQModInfo.AUTHORS;
		meta.url = AQModInfo.URL;
		
		config = new Configuration(event.getSuggestedConfigurationFile());
		baseDir = config.getConfigFile().getParentFile();
		Adapter.SetMod(new AdapterSideMod());
		
		MinecraftForge.TERRAIN_GEN_BUS.register(new AQTerrainGenHandler());
		MinecraftForge.EVENT_BUS.register(new AQBowEventHandler());
		
		playerNetwork = NetworkRegistry.INSTANCE.newSimpleChannel("<trp> channel");
		serviceNetwork = NetworkRegistry.INSTANCE.newSimpleChannel("<trs> channel");
		regionNetwork = NetworkRegistry.INSTANCE.newSimpleChannel("<trr> channel");
		
		AQItems.init();
		AQBlocks.init();
		
		NetworkRegistry.INSTANCE.registerGuiHandler(AquaMod.mod, new AQGuiHandler());
		
		proxy.preInit();
	}
	
	@SuppressWarnings("unused")
	@EventHandler
	public void init(FMLInitializationEvent event)
	{	
		
	}
	
	@SuppressWarnings(
	{
		"unused", "static-method"
	})
	@EventHandler
	public void postInit(FMLPostInitializationEvent event)
	{
		AQPlayerCraft.instance.initialize();
		AQWorkbenchCraft.instance.initialize();
		AQAnvilCraft.instance.initialize();
		
		EntityRegistry.registerModEntity(AQEntitySpellCharge.class, "spell_charge", 0, AquaMod.mod, 120, 3, true);
		
		AQCommandManager.register(new AQCommandRegion());
		
		proxy.postInit();
	}
	
	@SuppressWarnings("static-method")
	@EventHandler
	public void serverStarting(FMLServerStartingEvent event)
	{
		AQCommandManager.registerOnServer(event.getServer());
	}
	
	public static boolean inDevelopment()
	{
		return System.getenv("dev") != null;
	}
}
